{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useFetch = url => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null); // Add state for error\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    const fetchData = () => {\n      axios.get(url, {\n        cancelToken: source.token\n      }).then(res => {\n        setData(res.data);\n        setIsLoading(false);\n      }).catch(err => {\n        if (axios.isCancel(err)) {\n          console.log('useFetch => canceled request');\n        } else {\n          setError(err.message); // Set error state with error message\n          setIsLoading(false);\n        }\n        return err.message;\n      });\n    };\n    fetchData();\n    return () => source.cancel();\n  }, [url]);\n  return {\n    isLoading,\n    data,\n    error\n  };\n};\n_s(useFetch, \"Ejqx0yYTv64a6DPlcEDqUtqVFQ8=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","axios","useFetch","url","_s","isLoading","setIsLoading","data","setData","error","setError","source","CancelToken","fetchData","get","cancelToken","token","then","res","catch","err","isCancel","console","log","message","cancel"],"sources":["/home/jairo/work/wso2/choreo-challenge/Bosta-main/src/components/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useFetch = (url) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null); // Add state for error\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    const fetchData = () => {\r\n      axios\r\n        .get(url, { cancelToken: source.token })\r\n        .then((res) => {\r\n          setData(res.data);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          if (axios.isCancel(err)) {\r\n            console.log('useFetch => canceled request');\r\n          } else {\r\n          \tsetError(err.message); // Set error state with error message\r\n          \tsetIsLoading(false);\r\n          }\r\n          return err.message;\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n    return () => source.cancel();\r\n  }, [url]);\r\n\r\n  return { isLoading, data, error };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGV,KAAK,CAACW,WAAW,CAACD,MAAM,CAAC,CAAC;IACzC,MAAME,SAAS,GAAGA,CAAA,KAAM;MACtBZ,KAAK,CACFa,GAAG,CAACX,GAAG,EAAE;QAAEY,WAAW,EAAEJ,MAAM,CAACK;MAAM,CAAC,CAAC,CACvCC,IAAI,CAAEC,GAAG,IAAK;QACbV,OAAO,CAACU,GAAG,CAACX,IAAI,CAAC;QACjBD,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;QACd,IAAInB,KAAK,CAACoB,QAAQ,CAACD,GAAG,CAAC,EAAE;UACvBE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;QAC7C,CAAC,MAAM;UACNb,QAAQ,CAACU,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC;UACvBlB,YAAY,CAAC,KAAK,CAAC;QACpB;QACA,OAAOc,GAAG,CAACI,OAAO;MACpB,CAAC,CAAC;IACN,CAAC;IAEDX,SAAS,CAAC,CAAC;IACX,OAAO,MAAMF,MAAM,CAACc,MAAM,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACtB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,SAAS;IAAEE,IAAI;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACL,EAAA,CA9BIF,QAAQ;AAgCd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}