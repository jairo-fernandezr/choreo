{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetch = url => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n\n    const fetchData = () => {\n      axios.get(url, {\n        cancelToken: source.token\n      }).then(res => {\n        setData(res.data);\n        setIsLoading(false);\n      }).catch(err => {\n        if (axios.isCancel(err)) {\n          console.log('useFetch => canceled request');\n        }\n\n        return err.message;\n      });\n    };\n\n    fetchData();\n    return () => source.cancel();\n  }, [url]);\n  return {\n    isLoading,\n    data\n  };\n};\n\n_s(useFetch, \"LtZYNukHLKbHpMh85ZP+0jQDHH0=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/home/jairo/work/wso2/choreo-challenge/Bosta-main/src/components/hooks/useFetch.js"],"names":["useState","useEffect","axios","useFetch","url","isLoading","setIsLoading","data","setData","source","CancelToken","fetchData","get","cancelToken","token","then","res","catch","err","isCancel","console","log","message","cancel"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,MAAM,GAAGP,KAAK,CAACQ,WAAN,CAAkBD,MAAlB,EAAf;;AACA,UAAME,SAAS,GAAG,MAAM;AACtBT,MAAAA,KAAK,CACFU,GADH,CACOR,GADP,EACY;AAAES,QAAAA,WAAW,EAAEJ,MAAM,CAACK;AAAtB,OADZ,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbR,QAAAA,OAAO,CAACQ,GAAG,CAACT,IAAL,CAAP;AACAD,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OALH,EAMGW,KANH,CAMUC,GAAD,IAAS;AACd,YAAIhB,KAAK,CAACiB,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACvBE,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;;AACD,eAAOH,GAAG,CAACI,OAAX;AACD,OAXH;AAYD,KAbD;;AAeAX,IAAAA,SAAS;AACT,WAAO,MAAMF,MAAM,CAACc,MAAP,EAAb;AACD,GAnBQ,EAmBN,CAACnB,GAAD,CAnBM,CAAT;AAqBA,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACD,CA1BD;;GAAMJ,Q;;AA4BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useFetch = (url) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n    const fetchData = () => {\r\n      axios\r\n        .get(url, { cancelToken: source.token })\r\n        .then((res) => {\r\n          setData(res.data);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          if (axios.isCancel(err)) {\r\n            console.log('useFetch => canceled request');\r\n          }\r\n          return err.message;\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n    return () => source.cancel();\r\n  }, [url]);\r\n\r\n  return { isLoading, data };\r\n};\r\n\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}